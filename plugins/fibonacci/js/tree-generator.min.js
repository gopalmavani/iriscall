class TreeGenerator {
    constructor(t, i) {
        if (!Array.isArray(t) || !t.length) throw new Error("No sample data!");
        this.dict = {}, this.height = i;
        for (var h = 0; h < t.length; h++) this.dict[t[h].id] = t[h]
    }
    createNode(t, i, h, e) {
        if (i <= this.height) {
            const r = this.dict[t] && this.dict[t].lchild,
                s = this.dict[t] && this.dict[t].rchild,
                d = r || Math.random().toString(36).substr(2, 9),
                a = s || Math.random().toString(36).substr(2, 9);
            let n = this.createNode(d, i + 1, !0, !r),
                c = this.createNode(a, i + 2, !1, !s);
            return {
                name: t,
                depth: i,
                isLeftChild: h,
                isPlaceholder: e,
                ...i ? {} : {
                    height: this.height
                },
                data: e ? null : this.dict[t],
                ...i + 1 < this.height && (n || c) ? {
                    children: [...n && c && i + 2 < this.height ? [n, {
                        name: null,
                        depth: i + 1,
                        hidden: !0,
                        children: [c]
                    }] : [n || c]]
                } : {}
            }
        }
        return null
    }
}